<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.gammza.chupachups" />
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSizePerFile" value="10485760"/>
		<beans:property name="maxInMemorySize" value="10240"/> <!-- 파일 여러개 업로드할 경우 지정 숫자 이상의 파일은 메모리에 저장했다가 insert일어나면 업로드 -->
	</beans:bean>
	
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1"/><!-- 우선순위를 InternalResourceViewResolver보다 높게 설정 -->
	</beans:bean>
	
	<!-- jsonView 빈 등록 -->
	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView">
		<beans:property name="contentType" value="application/json;charset=UTF-8"/>
	</beans:bean>
	
	
	
	<!-- <interceptors>
		<interceptor>
			<mapping path="/member/memberDetail.me"/>
			<mapping path="/member/memberUpdate.me"/>
			<mapping path="/board/boardForm.bo"/>
			한두개만 인터셉터 안거쳐도 되는거면 반대로 할 수 있음
			<mapping path="/board/**.bo"/>
			<exclude-mapping path="/board/boardList.bo"/>
			<beans:bean class="com.gammza.chupachups.common.interceptor.LoginInterceptor"/> 
		</interceptor>
	</interceptors> -->
	
	
	<!-- oauth2 login -->
	<beans:bean id="naverClientID" class="java.lang.String">
	   <beans:constructor-arg value="GQGBjwaCzYQZZ_5XkE2o" />
    </beans:bean>
	<beans:bean id="naverClientSecret" class="java.lang.String">
		<beans:constructor-arg value="y3TAUEyfZu" />
	</beans:bean>
	<beans:bean id="naverRedirectUrl" class="java.lang.String">
		<beans:constructor-arg value="http://localhost:8095/auth/naver/callback" />
	</beans:bean>

	<!-- <beans:bean id="naverSns" class="com.gammza.chupachups.auth.SnsValue">
		<beans:constructor-arg value="naver" />
		<beans:constructor-arg ref="naverClientID" />
		<beans:constructor-arg ref="naverClientSecret" />
		<beans:constructor-arg ref="naverRedirectUrl" />
	</beans:bean>
	
	<beans:bean id="socialService" class="com.gammza.chupachups.auth.model.service.SocialService" /> -->
	
</beans:beans>
